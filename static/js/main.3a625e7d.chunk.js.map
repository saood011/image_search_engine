{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","term","setTerm","pictures","setPictures","pageNum","setPageNum","isLoading","setIsLoading","changeHandler","e","target","value","console","log","sendRequest","preventDefault","axios","get","params","query","per_page","headers","Authorization","then","response","data","results","catch","error","message","changePage","page","className","length","onSubmit","type","onChange","placeholder","map","pic","key","id","href","urls","full","src","thumb","alt","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a625e7d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [term, setTerm] = useState(\"car\");\n  const [pictures, setPictures] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const changeHandler = e => {\n    setTerm(e.target.value);\n    console.log(term);\n  };\n\n  //// sending request on search buton click\n\n  const sendRequest = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setPageNum(1);\n\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term,\n          per_page: 24\n        },\n        headers: {\n          Authorization:\n            \"Client-ID 082136f9e5e99ecb9cd2578e0d9a0b7b548e18001db11fd752f7c9e5abba096f\"\n        }\n      })\n      .then(response => {\n        setPictures([...response.data.results]);\n        console.log(response.data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  /// sending request on next/previous button click\n\n  const changePage = e => {\n    setIsLoading(true);\n\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term,\n          page: pageNum,\n          per_page: 24\n        },\n        headers: {\n          Authorization:\n            \"Client-ID 082136f9e5e99ecb9cd2578e0d9a0b7b548e18001db11fd752f7c9e5abba096f\"\n        }\n      })\n      .then(response => {\n        setPictures([...response.data.results]);\n        console.log(response.data.results);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  //// render section\n\n  return (\n    <div className=\"container\">\n      {pictures.length < 1 ? (\n        <div>\n          <div className=\"cover d-flex justify-content-center align-items-center\">\n            <p className=\"title h1\">IMAGE SEARCH</p>\n          </div>\n          <div className=\"d-flex justify-content-center align-items-center search\">\n            <form onSubmit={sendRequest} className=\"text-center d-flex mt-2 \">\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                className=\"form-control input\"\n                placeholder=\" Enter the name of the picture...\"\n              />\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary ml-1 input\"\n              />\n            </form>\n          </div>\n        </div>\n      ) : isLoading ? (\n        <div>\n          <div className=\"cover d-flex justify-content-center align-items-center\">\n            <p className=\"title h1\">Searching...</p>\n          </div>\n          <form\n            onSubmit={sendRequest}\n            className=\"text-center d-flex mt-2 shadow\"\n          >\n            <input\n              type=\"text\"\n              onChange={changeHandler}\n              className=\"form-control\"\n              placeholder=\" Enter the name of the picture...\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              className=\"btn btn-primary ml-1\"\n            />\n          </form>\n          <div className=\"text-center\">\n            <div className=\"lds-hourglass\"></div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"cover d-flex justify-content-center align-items-center\">\n            <p className=\"title h1\">You searced for \"{term}\"</p>\n          </div>\n          <form\n            onSubmit={sendRequest}\n            className=\"text-center d-flex mt-2 shadow\"\n          >\n            <input\n              type=\"text\"\n              onChange={changeHandler}\n              className=\"form-control\"\n              placeholder=\" Enter the name of the picture...\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              className=\"btn btn-primary ml-1\"\n            />\n          </form>\n          <div className=\"d-flex flex-wrap justify-content-center mt-2 list align-items-center\">\n            {pictures.length\n              ? pictures.map(pic => (\n                  <div className=\"card m-2 p-1 shadow\" key={pic.id}>\n                    <a href={pic.urls.full} target=\"blank\">\n                      {\" \"}\n                      <img\n                        src={pic.urls.thumb}\n                        className=\"card-img-top images\"\n                        alt={pic.id}\n                      />\n                    </a>\n                  </div>\n                ))\n              : null}\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <button\n              className=\"btn btn-danger shadow\"\n              onClick={() => {\n                if (pageNum > 1) {\n                  setPageNum(pageNum - 1);\n                }\n\n                console.log(pageNum);\n                changePage();\n              }}\n            >\n              previous\n            </button>\n            <p className=\"bg-secondary rounded-pill p-1 text-white  page\">\n              {pageNum}\n            </p>\n            <button\n              className=\"btn btn-danger shadow\"\n              onClick={() => {\n                setPageNum(pageNum + 1);\n                console.log(pageNum);\n                changePage();\n              }}\n            >\n              next\n            </button>\n          </div>\n        </div>\n      )}\n      <footer> &copy; 2019 Designed and Programmed by Saood using React</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}