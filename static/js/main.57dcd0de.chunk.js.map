{"version":3,"sources":["spinner.gif","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","term","setTerm","pictures","setPictures","pageNum","setPageNum","isLoading","setIsLoading","TotalPages","setTotalPages","changeHandler","e","target","value","sendRequest","preventDefault","console","log","axios","get","params","query","per_page","headers","Authorization","then","response","data","results","total_pages","catch","error","message","className","length","onSubmit","Input","icon","onChange","placeholder","type","src","spinner","alt","map","pic","key","id","urls","thumb","alt_description","href","full","Pagination","defaultActivePage","onPageChange","pageInfo","paginate","activePage","Number","page","total","totalPages","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57dcd0de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9209e391.gif\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Pagination, Input } from \"semantic-ui-react\";\nimport spinner from \"./spinner.gif\";\nimport \"./App.css\";\n\nfunction App() {\n  const [term, setTerm] = useState(\"car\");\n  const [pictures, setPictures] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [TotalPages, setTotalPages] = useState(5);\n  /*   const [pagination, setPagination] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n   */\n  /* const showPagination = e => {\n    console.log(e.target.id);\n    if (e.target.id === \"next\") setPagination(pagination.map((v, i) => v + 10));\n    else setPagination(pagination.map((v, i) => v - 10));\n  }; */\n\n  const changeHandler = e => {\n    setTerm(e.target.value);\n  };\n\n  //// sending request on search buton click\n\n  const sendRequest = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setPageNum(1);\n    console.log(term);\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term,\n          per_page: 24\n        },\n        headers: {\n          Authorization:\n            \"Client-ID 082136f9e5e99ecb9cd2578e0d9a0b7b548e18001db11fd752f7c9e5abba096f\"\n        }\n      })\n      .then(response => {\n        setPictures([...response.data.results]);\n        console.log(response.data.total_pages);\n        setTotalPages(response.data.total_pages);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  /// sending request on next/previous button click\n\n  const changePage = (e, paginate) => {\n    setIsLoading(true);\n    setPageNum(paginate);\n    console.log(paginate);\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term,\n          page: paginate,\n          per_page: 24\n        },\n        headers: {\n          Authorization:\n            \"Client-ID 082136f9e5e99ecb9cd2578e0d9a0b7b548e18001db11fd752f7c9e5abba096f\"\n        }\n      })\n      .then(response => {\n        setPictures([...response.data.results]);\n        console.log(response.data.total);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  //// render section\n\n  return (\n    <div className=\"fluid-container\">\n      {pictures.length < 1 ? (\n        <div className=\"cover d-flex justify-content-center align-items-center flex-column slide-in-bck-center \">\n          <p className=\"title h4 tracking-in-contract \">SA7 HD-IMAGE SEARCH</p>\n\n          <form onSubmit={sendRequest} className=\"text-center d-flex mt-5 \">\n            <Input\n              icon=\"search\"\n              onChange={changeHandler}\n              placeholder=\"Search...\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              className=\"btn btn-primary ml-1 input\"\n            />\n          </form>\n        </div>\n      ) : isLoading ? (\n        <div>\n          <div className=\" d-flex justify-content-center align-items-center min-height\">\n            <img src={spinner} alt=\"spinner\" />\n          </div>\n\n          <div className=\"text-center\">\n            <div className=\"lds-hourglass\"></div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <p className=\"title h5 text-dark text-center bg-warning\">\n            Showing result for \"{term}\"\n          </p>\n          <form\n            onSubmit={sendRequest}\n            className=\"text-center d-flex justify-content-center\"\n          >\n            <Input\n              icon=\"search\"\n              onChange={changeHandler}\n              placeholder=\"Search...\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              className=\"btn btn-primary ml-1 input\"\n            />\n          </form>\n          <div className=\"d-flex flex-wrap justify-content-center mt-2 mb-2 list align-items-center\">\n            {pictures.length\n              ? pictures.map(pic => (\n                  <div className=\"images\" key={pic.id}>\n                    <div className=\"hovereffect\">\n                      <img\n                        className=\"img-responsive\"\n                        src={pic.urls.thumb}\n                        alt={pic.id}\n                      />\n                      <div className=\"overlay\">\n                        <h2>{pic.alt_description}</h2>\n                        <a className=\"info\" href={pic.urls.full} target=\"blank\">\n                          link here\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              : null}\n          </div>\n          <div className=\"d-flex justify-content-around\">\n            <Pagination\n              defaultActivePage={pageNum}\n              onPageChange={(e, pageInfo) => {\n                setPageNum(pageInfo.activePage);\n                changePage(e, Number(pageInfo.activePage));\n                console.log(\"pagination clicked\");\n              }}\n              totalPages={TotalPages}\n            />\n            {/*    <button\n              className=\"btn btn-danger shadow\"\n              id=\"previous\"\n              onClick={e => {\n                if (pageNum > 1) {\n                  setPageNum(pageNum - 1);\n                }\n                console.log(pageNum);\n                changePage();\n                showPagination(e);\n              }}\n            >\n              &laquo; previous\n            </button>\n            <div className=\"d-flex flex-wrap justify-content-center mb-1\">\n              <div className=\"pagination d-flex flex-wrap justify-content-center\">\n                {pagination.map(v => (\n                  <button\n                    id={v}\n                    key={v}\n                    onClick={e => {\n                      changePage(e, Number(e.target.id));\n                    }}\n                    className={`rounded-circle mr-2 page ${\n                      pageNum === v ? \"Active\" : \"\"\n                    }`}\n                  >\n                    {v}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <button\n              className=\"btn btn-danger shadow\"\n              id=\"next\"\n              onClick={e => {\n                setPageNum(pageNum + 1);\n                console.log(pageNum);\n                changePage();\n                showPagination(e);\n              }}\n            >\n              next&raquo;\n            </button> */}\n          </div>\n        </div>\n      )}\n      <footer>\n        {\" \"}\n        &copy; 2019 Designed and Programmed <br></br> by Saood using React\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}